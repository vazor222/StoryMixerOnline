{"version":3,"sources":["assets/blue_idle.png","assets/GymGuy_victory.png","assets/GymGuy_idle.png","assets/GymGuy_defeat.png","assets/blue_defeat.png","assets/blue_victory.png","assets/fox_Idle.png","assets/fox_Defeat.png","assets/fox_Victory.png","assets/Dragon-Idle.gif","assets/Dragon-Defeat.gif","assets/Dragon-Victory.gif","assets/Ninja-idle.png","assets/Ninja-defeat.png","assets/Ninja-victory.png","assets/Piglet_Idle.png","assets/Piglet_Defeat.png","assets/Piglet_Victory.png","assets/vamp_Idle.png","assets/vamp_Defeat.png","assets/vamp_Victory.png","assets/robot_Idle.png","assets/robot_Defeat.png","assets/robot_Victory.png","assets/Fairy_Mascot.jpg","services/firebase.js","helpers/rooms.js","pages/Home.js","pages/Info.js","pages/Lobby.js","pages/SelfTrait.js","pages/OtherTrait.js","pages/Obstacle.js","pages/Story.js","pages/Vote.js","pages/End.js","App.js","pages/Chat.js","pages/Signup.js","pages/Login.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","db","firestore","getRandomRoomCodeGlyph","charAt","Math","floor","random","createRoom","creator_player_name","app","roomCreatedCallback","console","log","newRoomCode","String","padStart","roomPlayers","push","name","portrait","selftrait","collection","doc","set","code","creator","players","then","catch","error","err","joinRoomFromForm","roomCodeToJoin","joinPlayerName","roomJoinedCallback","joinRoomFromFormAsync","a","roomRef","get","room","exists","data","update","updateError","listenToRoom","roomCode","roomPlayersUpdateCallback","setUnsubscribeFuncCallback","unsubscribeFunc","onSnapshot","snapshot","updatePlayerInRoom","player","playerInRoomUpdatedCallback","updateIndex","i","length","window","alert","Home","props","state","joinRoomCode","handleJoinRoomCodeChange","bind","handleCreatorPlayerNameChange","handleJoinPlayerNameChange","handleJoinSubmit","handleCreateSubmit","event","this","setState","target","value","onStateChange","preventDefault","creatorPlayerName","history","replace","message","src","FairyMascotSplashImage","alt","style","width","id","height","overflow","border","marginTop","marginRight","marginBottom","marginLeft","BlueHairIdleImage","onSubmit","autoComplete","onChange","type","align","fontSize","to","Component","href","portraits","idle","success","BlueHairVictoryImage","failure","BlueHairDefeatImage","GymGuyIdleImage","GymGuyVictoryImage","GymGuyDefeatImage","FoxCopIdleImage","FoxCopVictoryImage","FoxCopDefeatImage","DragonIdleImage","DragonVictoryImage","DragonDefeatImage","NinjaIdleImage","NinjaVictoryImage","NinjaDefeatImage","PigletIdleImage","PigletVictoryImage","PigletDefeatImage","VampIdleImage","VampVictoryImage","VampDefeatImage","RobotIdleImage","RobotVictoryImage","RobotDefeatImage","portraitReset","portraitImage","index","Lobby","roomUnsubscribeFunc","handleStartGameSubmit","handleCancel","handleRoomPlayersUpdated","setRoomUnsubscribeFunc","portraitSelectionImageClicked","playerName","e","document","getElementById","parentElement","newPlayerData","othertrait","obstacle","story","votes","setTimeout","imgStyle","className","map","key","Object","entries","onClick","SelfTrait","playerSelfTrait","submitted","handleSelfTraitInputTextChange","handleSelfTraitSubmit","handleNext","playerPortraitIndex","selfTraitText","placeholder","OtherTrait","targetPlayerData","otherTrait","handleOtherTraitInputTextChange","handleOtherTraitSubmit","myIndex","targetPlayerIndex","otherTraitText","undefined","Obstacle","handleObstacleInputTextChange","handleObstacleSubmit","obstacleText","Story","playerStory","handleStoryInputTextChange","handleStorySubmit","playerData","storyText","updateStoryPlayerData","selfTrait","Vote","handleVoteSubmit","votePlayerName","firstChild","votePlayerIndex","End","winners","handleNewGame","highestScore","h","playerVotes","includes","App","handleStateChange","newState","loading","role","exact","path","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b2bbafa9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue_idle.2294c6ed.png\";","module.exports = __webpack_public_path__ + \"static/media/GymGuy_victory.360c87be.png\";","module.exports = __webpack_public_path__ + \"static/media/GymGuy_idle.9646021e.png\";","module.exports = __webpack_public_path__ + \"static/media/GymGuy_defeat.d404b33c.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_defeat.6e37182e.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_victory.762227a7.png\";","module.exports = __webpack_public_path__ + \"static/media/fox_Idle.9201c8a0.png\";","module.exports = __webpack_public_path__ + \"static/media/fox_Defeat.73eefa18.png\";","module.exports = __webpack_public_path__ + \"static/media/fox_Victory.db6efe05.png\";","module.exports = __webpack_public_path__ + \"static/media/Dragon-Idle.87c7390a.gif\";","module.exports = __webpack_public_path__ + \"static/media/Dragon-Defeat.308e1b3b.gif\";","module.exports = __webpack_public_path__ + \"static/media/Dragon-Victory.19a672f2.gif\";","module.exports = __webpack_public_path__ + \"static/media/Ninja-idle.e2ec02b2.png\";","module.exports = __webpack_public_path__ + \"static/media/Ninja-defeat.97c74467.png\";","module.exports = __webpack_public_path__ + \"static/media/Ninja-victory.4d11e6a6.png\";","module.exports = __webpack_public_path__ + \"static/media/Piglet_Idle.05920923.png\";","module.exports = __webpack_public_path__ + \"static/media/Piglet_Defeat.98030f84.png\";","module.exports = __webpack_public_path__ + \"static/media/Piglet_Victory.2bc3db7b.png\";","module.exports = __webpack_public_path__ + \"static/media/vamp_Idle.6a772966.png\";","module.exports = __webpack_public_path__ + \"static/media/vamp_Defeat.6e6ebef9.png\";","module.exports = __webpack_public_path__ + \"static/media/vamp_Victory.601d8e78.png\";","module.exports = __webpack_public_path__ + \"static/media/robot_Idle.beb2fd4f.png\";","module.exports = __webpack_public_path__ + \"static/media/robot_Defeat.dc18250e.png\";","module.exports = __webpack_public_path__ + \"static/media/robot_Victory.0afce1ff.png\";","module.exports = __webpack_public_path__ + \"static/media/Fairy_Mascot.a7a8d364.jpg\";","import firebase from 'firebase';\r\nimport \"firebase/firestore\";\r\n\r\n/*\r\n<!-- The core Firebase JS SDK is always required and must be listed first -->\r\n<script src=\"https://www.gstatic.com/firebasejs/8.3.2/firebase-app.js\"></script>\r\n\r\n<!-- TODO: Add SDKs for Firebase products that you want to use\r\n     https://firebase.google.com/docs/web/setup#available-libraries -->\r\n\r\n<script>\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDBGHHYip5Lk2-f7BPSgH3xxlay1fhQR_w\",\r\n    authDomain: \"story-mixer-online.firebaseapp.com\",\r\n    databaseURL: \"https://story-mixer-online.firebaseio.com\",\r\n    projectId: \"story-mixer-online\",\r\n    storageBucket: \"story-mixer-online.appspot.com\",\r\n    messagingSenderId: \"324326967821\",\r\n    appId: \"1:324326967821:web:b3799d68de5e2a5c\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n</script>\r\n*/\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyDBGHHYip5Lk2-f7BPSgH3xxlay1fhQR_w',\r\n  authDomain: 'story-mixer-online.firebaseapp.com',\r\n  projectId: 'story-mixer-online'\r\n});\r\n\r\nexport const db = firebase.firestore();\r\n\r\n/*\r\n// list all\r\ndb.collection(\"rooms\").get().then((querySnapshot) => {\r\n\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\tconsole.log(`${doc.id} => ${doc.data()}`);\r\n\t\t\t\tconsole.log(doc.data());\r\n\t\t});\r\n});\r\n*/\r\n","// StoryMixerOnline rooms module\r\n// This work is copyrighted.\r\n\r\nimport { db } from \"../services/firebase\"\r\n\r\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\nfunction getRandomRoomCodeGlyph()\r\n{\r\n\treturn alphabet.charAt(Math.floor(Math.random()*26));\r\n}\r\n\r\nfunction generateRoomCode()\r\n{\r\n\treturn getRandomRoomCodeGlyph()+\r\n\t\tgetRandomRoomCodeGlyph()+\r\n\t\tString(Math.floor(Math.random()*1000)).padStart(3, '0');\r\n}\r\n\r\nexport function createRoom(creator_player_name, app, roomCreatedCallback)\r\n{\r\n\tconsole.log(\"createRoom called! creator_player_name:\"+creator_player_name);\r\n\r\n\tvar newRoomCode = generateRoomCode();\r\n\t\r\n\tconsole.log(\"newRoomCode:\"+newRoomCode);\r\n\r\n\ttry\r\n\t{\r\n\t\t// makes the room entry in the database\r\n\t\tvar roomPlayers = [];\r\n\t\troomPlayers.push({\r\n\t\t\t\t\tname: creator_player_name,\r\n\t\t\t\t\tportrait: 0,\r\n\t\t\t\t\tselftrait: \"\"});\r\n\t\tdb.collection('rooms').doc(newRoomCode).set({\r\n\t\t\tcode: newRoomCode,\r\n\t\t\tcreator: creator_player_name,\r\n\t\t\tplayers: roomPlayers\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tconsole.log(\"Document written! id:\"+newRoomCode);\r\n\t\t\troomCreatedCallback(newRoomCode);\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error(\"Error adding room! id:\"+newRoomCode+\" error:\"+error);\r\n\t\t});\r\n\t}\r\n\tcatch(err)\r\n\t{\r\n\t\tconsole.error(err);\r\n\t}\r\n}\r\n\r\nexport function joinRoomFromForm(roomCodeToJoin, joinPlayerName, roomJoinedCallback)\r\n{\r\n\tjoinRoomFromFormAsync(roomCodeToJoin, joinPlayerName, roomJoinedCallback);\r\n}\r\n\r\nasync function joinRoomFromFormAsync(roomCodeToJoin, joinPlayerName, roomJoinedCallback)\r\n{\r\n\tconsole.log(\"joinRoomFromForm called! roomCodeToJoin:\"+roomCodeToJoin);\r\n\r\n\ttry\r\n\t{\r\n\t\t// update the room entry in the database to add ourselves to the player list\r\n\t\tvar roomRef = db.collection('rooms').doc(roomCodeToJoin);\r\n\t\tconsole.log(roomRef);\r\n\t\troomRef.get().then((room) => {\r\n\t\t\tif( room.exists )\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Found room:\"+roomCodeToJoin);\r\n\t\t\t\tconsole.log(room.data());\r\n\t\t\t\tvar roomPlayers = room.data().players;\r\n\t\t\t\tconsole.log(\"roomPlayers before\");\r\n\t\t\t\tconsole.log(roomPlayers);\r\n\t\t\t\t/*  TODO: check for duplicate names?\r\n\t\t\t\tif( roomPlayers[joinPlayerName] !== undefined ) {\r\n\t\t\t\t\tconsole.error(\"player name \"+joinPlayerName+\" is taken!\");\r\n\t\t\t\t\twindow.alert(\"Player name \"+joinPlayerName+\" is taken! Please try again.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}*/\r\n\t\t\t\troomPlayers.push({\r\n\t\t\t\t\tname: joinPlayerName,\r\n\t\t\t\t\tportrait: 0,\r\n\t\t\t\t\tselftrait: \"\"\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(\"roomPlayers after\");\r\n\t\t\t\tconsole.log(roomPlayers);\r\n\t\t\t\troomRef.update({players: roomPlayers}).then(() => {\r\n\t\t\t\t\tconsole.log(\"Room joined! roomCodeToJoin:\"+roomCodeToJoin+\" joinPlayerName:\"+joinPlayerName+\" creator:\"+room.data().creator);\r\n\t\t\t\t\troomJoinedCallback(room.data().creator);\r\n\t\t\t\t}).catch((updateError) => {\r\n\t\t\t\t\tconsole.log(\"Error joining room:\"+roomCodeToJoin+\" joinPlayerName:\"+joinPlayerName);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Room not found:\"+roomCodeToJoin);\r\n\t\t\t}\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log(error+\" roomCode:\"+roomCodeToJoin);\r\n\t\t});\r\n\t}\r\n\tcatch(err)\r\n\t{\r\n\t\tconsole.error(err);\r\n\t}\r\n}\r\n\r\nexport function listenToRoom(roomCode, roomPlayersUpdateCallback, setUnsubscribeFuncCallback)\r\n{\r\n\tconsole.log(\"listenToRoom called - roomCode:\"+roomCode);\r\n\ttry\r\n\t{\r\n\t\tvar roomRef = db.collection('rooms').doc(roomCode);\r\n\t\troomRef.get().then((room) => {\r\n\t\t\tif( room.exists )\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Found listen room:\"+room.data());\r\n\t\t\t\tvar unsubscribeFunc = roomRef.onSnapshot((snapshot) => {\r\n\t\t\t\t\tconsole.log(\"Got room update:\"+snapshot.data());\r\n\t\t\t\t\tlet players = snapshot.data().players;\r\n\t\t\t\t\tconsole.log(\"got players:\");\r\n\t\t\t\t\tconsole.log(players);\r\n\t\t\t\t\troomPlayersUpdateCallback(players);\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\"unsubscribeFunc:\"+unsubscribeFunc);\r\n\t\t\t\tsetUnsubscribeFuncCallback(unsubscribeFunc);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Room listen not found(?!):\"+roomCode);\r\n\t\t\t}\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log(error+\" listen roomCode:\"+roomCode);\r\n\t\t});\r\n\t}\r\n\tcatch(err)\r\n\t{\r\n\t\tconsole.error(\"ERROR: \"+err);\r\n\t}\r\n}\r\n\r\nexport function updatePlayerInRoom(roomCode, player, playerInRoomUpdatedCallback)\r\n{\r\n\tconsole.log(\"updatePlayerInRoom called! roomCode:\"+roomCode+\" player:\"+player);\r\n\r\n\ttry\r\n\t{\r\n\t\t// update the room entry in the database and update the player in the player list\r\n\t\tvar roomRef = db.collection('rooms').doc(roomCode);\r\n\t\tconsole.log(roomRef);\r\n\t\troomRef.get().then((room) => {\r\n\t\t\tif( room.exists )\r\n\t\t\t{\r\n\t\t\t\tconsole.log(\"Found room:\"+roomCode);\r\n\t\t\t\tconsole.log(room.data());\r\n\t\t\t\tvar roomPlayers = room.data().players;\r\n\t\t\t\tconsole.log(\"roomPlayers before\");\r\n\t\t\t\tconsole.log(roomPlayers);\r\n\t\t\t\tlet updateIndex = -1;\r\n\t\t\t\tfor (let i = 0; i < roomPlayers.length; ++i) {\r\n\t\t\t\t\tif( roomPlayers[i].name === player.name ) {\r\n\t\t\t\t\t\tupdateIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif( updateIndex < 0 ) {\r\n\t\t\t\t\tconsole.error(\"player \"+player.name+\" not found!\");\r\n\t\t\t\t\twindow.alert(\"Server error: no longer in room, please restart the game (by having everyone browse back to the beginning and refresh) and try again.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\troomPlayers[updateIndex] = player;\r\n\t\t\t\tconsole.log(\"roomPlayers after\");\r\n\t\t\t\tconsole.log(roomPlayers);\r\n\t\t\t\troomRef.update({players: roomPlayers}).then(() => {\r\n\t\t\t\t\tconsole.log(\"Player updated! roomCode:\"+roomCode+\" player.name:\"+player.name);\r\n\t\t\t\t\tplayerInRoomUpdatedCallback();\r\n\t\t\t\t}).catch((updateError) => {\r\n\t\t\t\t\tconsole.error(\"Error updating player in room:\"+roomCode+\" player.name:\"+player.name);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tconsole.error(\"Room not found:\"+roomCode);\r\n\t\t\t}\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.error(error+\" roomCode:\"+roomCode);\r\n\t\t});\r\n\t}\r\n\tcatch(err)\r\n\t{\r\n\t\tconsole.error(err);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createRoom, joinRoomFromForm } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuySuccessImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\n\r\nexport default class Home extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tjoinRoomCode: '',\r\n\t\t\tjoinPlayerName: '',\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.handleJoinRoomCodeChange = this.handleJoinRoomCodeChange.bind(this);\r\n\t\tthis.handleCreatorPlayerNameChange = this.handleCreatorPlayerNameChange.bind(this);\r\n\t\tthis.handleJoinPlayerNameChange = this.handleJoinPlayerNameChange.bind(this);\r\n\t\tthis.handleJoinSubmit = this.handleJoinSubmit.bind(this);\r\n\t\tthis.handleCreateSubmit = this.handleCreateSubmit.bind(this);\r\n\t}\r\n\t\r\n\thandleJoinRoomCodeChange(event) {\r\n\t\tconsole.log(\"handleJoinRoomCodeChange\");\r\n\t\tconsole.log(event);\r\n\t\tthis.setState({joinRoomCode: event.target.value});\r\n\t}\r\n\t\r\n\thandleJoinPlayerNameChange(event) {\r\n\t\tconsole.log(\"handleJoinPlayerNameChange\");\r\n\t\tconsole.log(event);\r\n\t\tthis.setState({joinPlayerName: event.target.value});\r\n\t}\r\n\t\r\n\thandleCreatorPlayerNameChange(event) {\r\n\t\tthis.props.onStateChange(\"creatorPlayerName\", event.target.value);\r\n\t}\r\n\t\r\n\thandleJoinSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\t// TODO: remove these debug default value setters for final release\r\n\t\tif( this.state.joinRoomCode.length === 0 )\r\n\t\t{\r\n\t\t\tthis.state.joinRoomCode = \"BG263\";\r\n\t\t\tthis.state.joinPlayerName = \"joiner8136\";\r\n\t\t}\r\n\t\tif( this.state.joinRoomCode.length !== 5 )\r\n\t\t{\r\n\t\t\tconsole.error('Invalid room code!');\r\n\t\t\tconsole.log(this.state);\r\n\t\t\tconsole.log(this.state.joinRoomCode);\r\n\t\t\tconsole.log(this.state.error);\r\n\t\t\talert('Invalid room code!');\r\n\t\t\tthis.setState({ error: 'Invalid room code!' });\r\n\t\t\tconsole.log(this.state.error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({ error: ''});\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleJoinSubmit calling joinRoomFromForm room \"+this.state.joinRoomCode+\" joinPlayerName:\"+this.state.joinPlayerName);\r\n\t\t\tjoinRoomFromForm(this.state.joinRoomCode, this.state.joinPlayerName, (creatorPlayerName) => {\r\n\t\t\t\tconsole.log(\"roomJoinedCallback this.state.joinRoomCode:\"+this.state.joinRoomCode+\" this.state.joinPlayerName:\"+this.state.joinPlayerName+\" creatorPlayerName:\"+creatorPlayerName);\r\n\t\t\t\tthis.props.onStateChange(\"roomCodeToJoin\", this.state.joinRoomCode);\r\n\t\t\t\tthis.props.onStateChange(\"playerName\", this.state.joinPlayerName);\r\n\t\t\t\tthis.props.onStateChange(\"creatorPlayerName\", creatorPlayerName);\r\n\t\t\t\tconsole.log(\"Home room joined callback\");\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t\tthis.props.history.replace(\"/lobby\");  // redirect to lobby\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\t// TODO: handle name collisions\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleCreateSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ error: '' });\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleCreateSubmit calling createRoom room creatorPlayerName:\"+this.props.creatorPlayerName);\r\n\t\t\tcreateRoom(this.props.creatorPlayerName, this, (newRoomCode) => {\r\n\t\t\t\tthis.props.onStateChange(\"roomCodeToJoin\", newRoomCode);\r\n\t\t\t\tthis.props.onStateChange(\"playerName\", this.props.creatorPlayerName);\r\n\t\t\t\tthis.props.onStateChange(\"creatorPlayerName\", this.props.creatorPlayerName);\r\n\t\t\t\tconsole.log(\"Home room created callback\");\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t\tthis.props.history.replace(\"/lobby\");  // redirect to lobby\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst gymGuyAvatarStyle = {\r\n\t\t\twidth:380,\r\n\t\t\theight:480,\r\n\t\t\toverflow:'hidden',\r\n\t\t\tborder:'5px solid black'\r\n\t\t};\r\n\t\tconst gymGuyImgStyle = {\r\n\t\t\tmarginTop:-10,\r\n\t\t\tmarginRight:0,\r\n\t\t\tmarginBottom:0,\r\n\t\t\tmarginLeft:-350\r\n\t\t};\r\n\t\tconst imgStyle = {\r\n\t\t\tmarginTop:0,\r\n\t\t\tmarginRight:0,\r\n\t\t\tmarginBottom:0,\r\n\t\t\tmarginLeft:0\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p>Welcome to Story Mixer Online! A cooperative storytelling game for people who like to come up with ideas and combine them with others.</p>\r\n\t\t\t\t<img src={FairyMascotSplashImage} alt=\"Fairy Mascot\" style={{width:\"100%\"}} /><br />\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* debug start test avatar */}\r\n\t\t\t\t<div id=\"avatar-container\" style={gymGuyAvatarStyle}>\r\n\t\t\t\t\t<img id=\"testavatar\" style={imgStyle} src={BlueHairIdleImage} alt=\"GymGuyTest\"/><br />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* debug end test avatar */}\r\n\t\t\t\t<div id=\"error\">\r\n\t\t\t\t\t{this.state.error ? <p>{this.state.error}</p> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"join\">\r\n\t\t\t\t\t<form onSubmit={this.handleJoinSubmit}>\r\n\t\t\t\t\t\t<b>Join an existing game?</b><br />\r\n\t\t\t\t\t\tGame Room Code (case sensitive):<br />\r\n\t\t\t\t\t\t<input autoComplete=\"off\" onChange={this.handleJoinRoomCodeChange} id=\"room_code\" /><br />\r\n\t\t\t\t\t\tPlayer Name:<br />\r\n\t\t\t\t\t\t<input onChange={this.handleJoinPlayerNameChange} id=\"player_name\" /><br />\r\n\t\t\t\t\t\t<button type=\"submit\" id=\"join_button\">Join</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div id=\"create\">\r\n\t\t\t\t\t<form onSubmit={this.handleCreateSubmit}>\r\n\t\t\t\t\t\t<b>Create a game?</b><br />\r\n\t\t\t\t\t\tCreator Player Name:<br />\r\n\t\t\t\t\t\t<input onChange={this.handleCreatorPlayerNameChange} id=\"creator_player_name\" /><br />\r\n\t\t\t\t\t\t<button type=\"submit\" id=\"create_button\">Create</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div align=\"right\" style={{fontSize:\"72px\"}}>\r\n\t\t\t\t\t<Link to=\"/info\">Info</Link> {/*TODO: make this a circled \"?\" info button*/}\r\n\t\t\t\t</div>\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<script src=\"index.js\"></script>\r\n\t\t\t\t<script>\r\n\t\t\t\t\tconsole.log(\"main index.html finished loading\");\r\n\t\t\t\t</script>\r\n\t\t\t\t{/*<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tSign Up to <Link to=\"/\">Chatty</Link>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<p>Fill in the form below to create an account.</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state?.email}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state?.password} type=\"password\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{this.state?.error ? <p>{this.state?.error}</p> : null}\r\n\t\t\t\t\t\t<button type=\"submit\">Sign up</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t<p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n\t\t\t\t</form>*/}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link to=\"/\">Go Back</Link>\r\n\t\t\t\t<h3>How to Play</h3>\r\n\t\t\t\t<p>Once you join a party, you will make a character together with everyone else. First you will be asked to come up with a trait for your character. It can be something about how they look, a strength, something they like, a personality trait, or whatever you like. It should be interesting and help your character stand out. Everyone will vote for the best character and their story at the end.</p>\r\n\t\t\t\t<p>Next, you will define a trait for someone else's character. It can be nice and play off their trait so far, or it can be something difficult or funny that will make it challenging for them to come up with interesting story.</p>\r\n\t\t\t\t<p>Then, you come up with an event (obstacle, goal, person, interaction, scene) for another player to try to make an interesting reaction/story from. Then you will be shown the event you were given, and you will be asked to write an interesting or amusing story about what your character does in reaction to that event. Make it entertaining or awesome and you might just get enough votes to win the game!</p>\r\n\t\t\t\t<p>Finally, everyone's characters and stories will be displayed, and then players will have a chance to vote for their favorite (other than themselves). The player with the most votes wins the game!</p>\r\n\t\t\t\t\r\n\t\t\t\t<h3>Credits</h3>\r\n\t\t\t\t<p>Animation, Character and Concept Art, UI design - J Peter Jones - <a href=\"https://www.linkedin.com/in/j-peter-jones-3878ba1b/\" target=\"_blank\">https://www.linkedin.com/in/j-peter-jones-3878ba1b/</a></p>\r\n\t\t\t\t<p>Concept Art - Hikaru9 - <a href=\"http://hikaru9.deviantart.com/\" target=\"_blank\">http://hikaru9.deviantart.com/</a></p>\r\n\t\t\t\t<p>Concept Art - RhettCandy - <a href=\"https://www.coroflot.com/BrainSurgeonStudio/\" target=\"_blank\">https://www.coroflot.com/BrainSurgeonStudio/</a></p>\r\n\t\t\t\t<p>Concept Art - Taylor Maw - <a href=\"https://www.linkedin.com/in/taylor-maw-44b2174/\" target=\"_blank\">https://www.linkedin.com/in/taylor-maw-44b2174/</a></p>\r\n\t\t\t\t<p>Concept Art - Jenna Kemker - <a href=\"https://www.jennakemker.com/\" target=\"_blank\">https://www.jennakemker.com/</a></p>\r\n\t\t\t\t<p>Code, Design - vazor - <a href=\"http://vazor222.com/\" target=\"_blank\">http://vazor222.com/</a></p>\r\n\t\t\t\t\r\n\t\t\t\t<h3>About</h3>\r\n\t\t\t\t<p>This game was developed in vazor's spare time over the past few years. It is inspired by the original tabletop prototype of the same name. The game is meant to be an introduction to the idea of tabletop roleplaying games, but also a fun casual party game anyone can play.</p>\r\n\t\t\t\t<p>You can learn more about vazor and send feedback or questions by posting @vazor222 on Twitter, or by joining the IGDA Utah group on Google, or by joining the Experimental Gameplay group on LinkedIn.</p>\r\n\t\t\t\t\r\n\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase?\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class Lobby extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleStartGameSubmit = this.handleStartGameSubmit.bind(this);\r\n\t\tthis.handleCancel = this.handleCancel.bind(this);\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\t//this.testAvatarImageLoaded = this.testAvatarImageLoaded.bind(this);\r\n\t\t//this.testAvatarImageLooped = this.testAvatarImageLooped.bind(this);\r\n\t\tthis.portraitSelectionImageClicked = this.portraitSelectionImageClicked.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t// TODO: display randomly assigned avatar\r\n\t\t\r\n\t\tconsole.log(\"calling listenToRoom on lobby startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.handleRoomPlayersUpdated);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleCharacterChange(event) {\r\n\t\t// TODO: update borders\r\n\t}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\t\r\n\t\t// put players in player display list (players by itself is a shortcut to \"players: players\")\r\n\t\tthis.setState({ players });\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleStartGameSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.history.replace(\"/selftrait\");  // redirect to selftrait\r\n\t}\r\n\t\r\n\thandleCancel(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconsole.log(\"TODO: cancel/exit lobby/close lobby/delete room\");\r\n\t\t\r\n\t\tthis.props.history.replace(\"/\");  // redirect to home\r\n\t}\r\n\t\r\n\t// bind and link this up in img tag onLoad event to run\r\n\t//testAvatarImageLoaded(e) {\r\n\t//\t// fires whenever any animation is loaded (e.g. on click, and on revert to idle)\r\n\t//\tconsole.log(\"test avatar loaded w:\"+e.target.id);\r\n\t//\t//setInterval(this.testAvatarImageLooped, 6700);\r\n\t//}\r\n\t\r\n\t//testAvatarImageLooped() {\r\n\t//\tconsole.log(\"test avatar looped\");\r\n\t//}\r\n\r\n\tportraitSelectionImageClicked(e, index) {\r\n\t\tconsole.log(\"portrait image clicked t:\"+e.target.id+\" index:\"+index);\r\n\t\t// un-highlight all borders, and then highlight the clicked one\r\n\t\tfor (let i = 0; i < portraits.length; ++i) {\r\n\t\t\tdocument.getElementById(\"avatar-container\"+i).style.border = '5px solid black';\r\n\t\t}\r\n\t\te.target.parentElement.style.border = \"5px solid yellow\";\r\n\t\t// update the player's portrait in firebase\r\n\t\ttry {\r\n\t\t\tconsole.log(\"portraitSelectionImageClicked calling updatePlayerInRoom player:\"+this.props.playerName+\" this.props.roomCodeToJoin:\"+this.props.roomCodeToJoin);\r\n\t\t\tvar newPlayerData = {};\r\n\t\t\tnewPlayerData.name = this.props.playerName;\r\n\t\t\tnewPlayerData.portrait = index;\r\n\t\t\tnewPlayerData.selftrait = \"\";\r\n\t\t\tnewPlayerData.othertrait = \"\";\r\n\t\t\tnewPlayerData.obstacle = \"\";\r\n\t\t\tnewPlayerData.story = \"\";\r\n\t\t\tnewPlayerData.votes = 0;\r\n\t\t\tupdatePlayerInRoom(this.props.roomCodeToJoin, newPlayerData, () => {\r\n\t\t\t\tconsole.log(\"Lobby player updated callback\");\r\n\t\t\t\t// portrait changed, update app state\r\n\t\t\t\tthis.props.onStateChange(\"playerPortraitIndex\", index);\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t\t// play the success animation\r\n\t\te.target.src = portraits[index].success;\r\n\t\tsetTimeout(portraitReset.bind(null, e.target, index), 2000);\r\n\t}\r\n\r\n\trender() {\r\n\t\t// TODO: move to style.css?\r\n\t\tconst gymGuyImgStyle = {\r\n\t\t\tmarginTop:-10,\r\n\t\t\tmarginRight:0,\r\n\t\t\tmarginBottom:0,\r\n\t\t\tmarginLeft:-350\r\n\t\t};\r\n\t\tconst imgStyle = {\r\n\t\t\tmarginTop:0,\r\n\t\t\tmarginRight:0,\r\n\t\t\tmarginBottom:0,\r\n\t\t\tmarginLeft:0\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{this.props.roomCodeToJoin == 'VZ222'? \"Troup Code (Wow you got the vazor222 code! Lucky!)\" : \"Troupe Code\"}</h2>\r\n\t\t\t\t<p>{this.props.roomCodeToJoin}</p>\r\n\t\t\t\t<h2>Room Creator</h2>\r\n\t\t\t\t<p>{this.props.creatorPlayerName}</p>\r\n\t\t\t\t<h2>Player List</h2>\r\n\t\t\t\t<div className=\"playerListContainer\">\r\n\t\t\t\t\t{this.state.players.map((player, index) => (\r\n\t\t\t\t\t\t<div key={\"playerdiv\"+index+\"\"+player.name} className=\"lobbyBox\">\r\n\t\t\t\t\t\t\t<div className=\"lobbyNameBox\">Player {index+1}: {player.name}</div><br />\r\n\t\t\t\t\t\t\t<img className=\"lobbyNameThumb\" src={portraits[player.portrait].idle} alt={portraits[player.portrait].idle} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* show all the portraits and let the player click to select their avatar */}\r\n\t\t\t\t<h2>Select Your Avatar</h2>\r\n\t\t\t\t<div className=\"portraitSelectionContainer\">\r\n\t\t\t\t\t{Object.entries(portraits).map(([key, value], index) => (\r\n\t\t\t\t\t\t<div id={\"avatar-container\"+index} key={\"avatar-container-\"+index+\"-\"+key} className=\"lobbyAvatarStyle\">\r\n\t\t\t\t\t\t\t<img onClick={(e) => this.portraitSelectionImageClicked(e, index)} id={\"portrait\"+index} style={imgStyle} src={value.idle} alt={value.idle+index}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div id=\"startGame\">\r\n\t\t\t\t\t<form onSubmit={this.handleStartGameSubmit}>\r\n\t\t\t\t\t\t<b>Start Story Mixer!</b><br />\r\n\t\t\t\t\t\t(Everyone should press this after everyone has joined and selected their avatar.)<br />\r\n\t\t\t\t\t\t<button id=\"start_game_button\" type=\"submit\">Start Game</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"cancel\">\r\n\t\t\t\t\t<form onSubmit={this.handleCancel}>\r\n\t\t\t\t\t\t<b>Cancel and exit lobby.</b><br />\r\n\t\t\t\t\t\t<button id=\"cancel_button\" type=\"submit\">Cancel</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class SelfTrait extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayerSelfTrait: \"\",\r\n\t\t\tsubmitted: \"\",\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\tthis.handleSelfTraitInputTextChange = this.handleSelfTraitInputTextChange.bind(this);\r\n\t\tthis.handleSelfTraitSubmit = this.handleSelfTraitSubmit.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"calling listenToRoom on SelfTrait startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.props.playerPortraitIndex);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\t\r\n\t\t// put players in player display list (players by itself is a shortcut to \"players: players\")\r\n\t\tthis.setState({ players });\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleSelfTraitInputTextChange(event) {\r\n\t\tconsole.log(\"handleSelfTraitInputTextChange\");\r\n\t\tconsole.log(event);\r\n\t\tthis.setState({playerSelfTrait: event.target.value});\r\n\t}\r\n\t\r\n\thandleSelfTraitSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tvar selfTraitText = this.state.playerSelfTrait;\r\n\t\tconsole.log(\"selfTraitText:\"+selfTraitText);\r\n\t\t\r\n\t\t// update the player's selftrait in firebase\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleSelfTraitSubmit calling updatePlayerInRoom player:\"+this.props.playerName+\" this.props.roomCodeToJoin:\"+this.props.roomCodeToJoin);\r\n\t\t\tvar newPlayerData = {};\r\n\t\t\tnewPlayerData.name = this.props.playerName;\r\n\t\t\tnewPlayerData.portrait = this.props.playerPortraitIndex;\r\n\t\t\tnewPlayerData.selftrait = selfTraitText;\r\n\t\t\tnewPlayerData.othertrait = \"\";\r\n\t\t\tnewPlayerData.obstacle = \"\";\r\n\t\t\tnewPlayerData.story = \"\";\r\n\t\t\tnewPlayerData.votes = 0;\r\n\t\t\tupdatePlayerInRoom(this.props.roomCodeToJoin, newPlayerData, () => {\r\n\t\t\t\tconsole.log(\"SelfTrait player updated callback\");\r\n\t\t\t\t// self trait changed, update app state\r\n\t\t\t\tthis.props.onStateChange(\"selfTrait\", selfTraitText);\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t\tthis.setState({ submitted: \"Submitted!\"});\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: play victory animation\r\n\t}\r\n\t\r\n\thandleNext(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.history.replace(\"/othertrait\");  // redirect to othertrait\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Player</h2>\r\n\t\t\t\t<div className=\"traitBox\">\r\n\t\t\t\t\t<div className=\"traitNameBox\">{this.props.playerName}</div><br />\r\n\t\t\t\t\t<img className=\"traitNameThumb\" src={portraits[this.props.playerPortraitIndex].idle} alt={portraits[this.props.playerPortraitIndex].idle} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* allow the player to enter a trait for themselves */}\r\n\t\t\t\t<h2>Enter Trait</h2>\r\n\t\t\t\t<p>Enter a trait for your character. It can be a look, an attitude, a strength/weakness, skill, power, like/dislike, etc.</p>\r\n\t\t\t\t<div id=\"submitSelfTrait\">\r\n\t\t\t\t\t<form onSubmit={this.handleSelfTraitSubmit}>\r\n\t\t\t\t\t\t<input type=\"text\" onChange={this.handleSelfTraitInputTextChange} id=\"selfTraitInput\" name=\"selfTraitInput\" placeholder=\"Can fly\" /><br />\r\n\t\t\t\t\t\t<button id=\"selfTraitSubmitButton\" type=\"submit\">Submit</button><br />\r\n\t\t\t\t\t\t{this.state.submitted}<br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Next Step</h2>\r\n\t\t\t\t<div id=\"next\">\r\n\t\t\t\t\t<form onSubmit={this.handleNext}>\r\n\t\t\t\t\t\t<b>Do not</b> press this until everyone has finished writing and submitted their trait.<br />\r\n\t\t\t\t\t\t<button id=\"nextButton\" type=\"submit\">Next</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class OtherTrait extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\ttargetPlayerData: {},\r\n\t\t\totherTrait: \"\",\r\n\t\t\tsubmitted: \"\",\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\tthis.handleOtherTraitInputTextChange = this.handleOtherTraitInputTextChange.bind(this);\r\n\t\tthis.handleOtherTraitSubmit = this.handleOtherTraitSubmit.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"calling listenToRoom on OtherTrait startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.props.playerPortraitIndex);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\t\r\n\t\t// get target player (the player you will set their 'other' trait for)\r\n\t\t\r\n\t\tlet myIndex = -1;\r\n\t\tfor (let i = 0; i < players.length; ++i) {\r\n\t\t\tif( players[i].name === this.props.playerName) {\r\n\t\t\t\tmyIndex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( myIndex < 0 ) {\r\n\t\t\tconsole.error(\"player \"+this.props.playerName+\" not found!\");\r\n\t\t\twindow.alert(\"Server error: no longer in room, please restart the game (by having everyone browse back to the beginning and refresh) and try again.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(\"myIndex:\"+myIndex);\r\n\t\tvar targetPlayerIndex = myIndex+1;\r\n\t\tif( targetPlayerIndex >= players.length ) {\r\n\t\t\ttargetPlayerIndex = 0;\r\n\t\t}\r\n\t\tconsole.log(\"targetPlayerIndex:\"+targetPlayerIndex);\r\n\t\tconsole.log(players[targetPlayerIndex]);\r\n\t\tthis.setState({players: players, targetPlayerData: players[targetPlayerIndex]});\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleOtherTraitInputTextChange(event) {\r\n\t\tconsole.log(\"handleOtherTraitInputTextChange\");\r\n\t\tconsole.log(event);\r\n\t\tthis.setState({otherTrait: event.target.value});\r\n\t}\r\n\t\r\n\thandleOtherTraitSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tvar otherTraitText = this.state.otherTrait;\r\n\t\tconsole.log(\"otherTraitText:\"+otherTraitText);\r\n\t\t\r\n\t\t// update the player's othertrait in firebase\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleOtherTraitSubmit calling updatePlayerInRoom player:\"+this.props.playerName+\" this.props.roomCodeToJoin:\"+this.props.roomCodeToJoin);\r\n\t\t\tvar targetPlayerData = this.state.targetPlayerData;\r\n\t\t\tconsole.log(targetPlayerData);\r\n\t\t\ttargetPlayerData.othertrait = otherTraitText;\r\n\t\t\tconsole.log(targetPlayerData);\r\n\t\t\tupdatePlayerInRoom(this.props.roomCodeToJoin, targetPlayerData, () => {\r\n\t\t\t\tconsole.log(\"OtherTrait player updated callback\");\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t\tconsole.log(targetPlayerData);\r\n\t\t\t\tthis.setState(targetPlayerData);\r\n\t\t\t\tthis.setState({ submitted: \"Submitted!\"});\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: play defeat animation?\r\n\t}\r\n\t\r\n\thandleNext(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.history.replace(\"/obstacle\");  // redirect to obstacle\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Target Player</h2>\r\n\t\t\t\t<div className=\"traitBox\">\r\n\t\t\t\t\t<div className=\"traitNameBox\">{this.state.targetPlayerData.name}</div><br />\r\n\t\t\t\t\t<img className=\"traitNameThumb\" src={this.state.targetPlayerData.portrait != undefined ? portraits[this.state.targetPlayerData.portrait].idle : undefined} alt={this.state.targetPlayerData.portrait != undefined ? portraits[this.state.targetPlayerData.portrait].idle : undefined} /><br />\r\n\t\t\t\t\t<p>Self Trait: {this.state.targetPlayerData.selftrait}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* allow the player to enter a trait for another player */}\r\n\t\t\t\t<h2>Enter Trait</h2>\r\n\t\t\t\t<p>Now enter a trait for this other player's character. It can be a look, an attitude, a strength/weakness, skill, power, like/dislike, etc.</p>\r\n\t\t\t\t<div id=\"submitOtherTrait\">\r\n\t\t\t\t\t<form onSubmit={this.handleOtherTraitSubmit}>\r\n\t\t\t\t\t\t<input type=\"text\" onChange={this.handleOtherTraitInputTextChange} id=\"otherTraitInput\" name=\"otherTraitInput\" placeholder=\"Fears snakes\" /><br />\r\n\t\t\t\t\t\t<button id=\"otherTraitSubmitButton\" type=\"submit\">Submit</button><br />\r\n\t\t\t\t\t\t{this.state.submitted}<br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Next Step</h2>\r\n\t\t\t\t<div id=\"next\">\r\n\t\t\t\t\t<form onSubmit={this.handleNext}>\r\n\t\t\t\t\t\t<b>Do not</b> press this until everyone has finished writing their trait for the other player.<br />\r\n\t\t\t\t\t\t<button id=\"nextButton\" type=\"submit\">Next</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class Obstacle extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\ttargetPlayerData: {},\r\n\t\t\tobstacle: \"\",\r\n\t\t\tsubmitted: \"\",\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\tthis.handleObstacleInputTextChange = this.handleObstacleInputTextChange.bind(this);\r\n\t\tthis.handleObstacleSubmit = this.handleObstacleSubmit.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"calling listenToRoom on Obstacle startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.props.playerPortraitIndex);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\t\r\n\t\t// get target player (the player you will set their obstacle for)\r\n\t\t\r\n\t\tlet myIndex = -1;\r\n\t\tfor (let i = 0; i < players.length; ++i) {\r\n\t\t\tif( players[i].name === this.props.playerName) {\r\n\t\t\t\tmyIndex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( myIndex < 0 ) {\r\n\t\t\tconsole.error(\"player \"+this.props.playerName+\" not found!\");\r\n\t\t\twindow.alert(\"Server error: no longer in room, please restart the game (by having everyone browse back to the beginning and refresh) and try again.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(\"myIndex:\"+myIndex);\r\n\t\tvar targetPlayerIndex = myIndex-1;\r\n\t\tif( targetPlayerIndex < 0 ) {\r\n\t\t\ttargetPlayerIndex = players.length-1;\r\n\t\t}\r\n\t\tconsole.log(\"targetPlayerIndex:\"+targetPlayerIndex);\r\n\t\tconsole.log(players[targetPlayerIndex]);\r\n\t\tthis.setState({players: players, targetPlayerData: players[targetPlayerIndex]});\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleObstacleInputTextChange(event) {\r\n\t\tthis.setState({obstacle: event.target.value});\r\n\t}\r\n\t\r\n\thandleObstacleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tvar obstacleText = this.state.obstacle;\r\n\t\tconsole.log(\"obstacleText:\"+obstacleText);\r\n\t\t\r\n\t\t// update the player's obstacle in firebase\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleObstacleSubmit calling updatePlayerInRoom player:\"+this.props.playerName+\" this.props.roomCodeToJoin:\"+this.props.roomCodeToJoin);\r\n\t\t\tvar targetPlayerData = this.state.targetPlayerData;\r\n\t\t\tconsole.log(targetPlayerData);\r\n\t\t\ttargetPlayerData.obstacle = obstacleText;\r\n\t\t\tconsole.log(targetPlayerData);\r\n\t\t\tupdatePlayerInRoom(this.props.roomCodeToJoin, targetPlayerData, () => {\r\n\t\t\t\tconsole.log(\"Obstacle player updated callback\");\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t\tconsole.log(targetPlayerData);\r\n\t\t\t\tthis.setState(targetPlayerData);\r\n\t\t\t\tthis.setState({ submitted: \"Submitted!\"});\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: play success animation\r\n\t}\r\n\t\r\n\thandleNext(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.history.replace(\"/story\");  // redirect to story\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Target Player</h2>\r\n\t\t\t\t<div className=\"obstacleBox\">\r\n\t\t\t\t\t<div className=\"traitNameBox\">{this.state.targetPlayerData.name}</div><br />\r\n\t\t\t\t\t<img className=\"obstacleThumb\" src={this.state.targetPlayerData.portrait != undefined ? portraits[this.state.targetPlayerData.portrait].idle : undefined} alt={this.state.targetPlayerData.portrait != undefined ? portraits[this.state.targetPlayerData.portrait].idle : undefined} /><br />\r\n\t\t\t\t\t<p>Self Trait: {this.state.targetPlayerData.selftrait}</p>\r\n\t\t\t\t\t<p>Other Trait: {this.state.targetPlayerData.othertrait}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* allow the player to enter an obstacle for another player */}\r\n\t\t\t\t<h2>Enter Obstacle</h2>\r\n\t\t\t\t<p>Now enter an obstacle for this other player's character. It can be an event, roadblock, enemy, challenge, goal, scene, etc. that they have to face.</p>\r\n\t\t\t\t<div id=\"submitObstacle\">\r\n\t\t\t\t\t<form onSubmit={this.handleObstacleSubmit}>\r\n\t\t\t\t\t\t<input type=\"text\" onChange={this.handleObstacleInputTextChange} id=\"obstacleInput\" name=\"obstacleInput\" placeholder=\"You meet a stranger\" /><br />\r\n\t\t\t\t\t\t<button id=\"obstacleSubmitButton\" type=\"submit\">Submit</button><br />\r\n\t\t\t\t\t\t{this.state.submitted}<br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Next Step</h2>\r\n\t\t\t\t<div id=\"next\">\r\n\t\t\t\t\t<form onSubmit={this.handleNext}>\r\n\t\t\t\t\t\t<b>Do not</b> press this until everyone has finished writing the obstacle for the other player and submitted it.<br />\r\n\t\t\t\t\t\t<button id=\"nextButton\" type=\"submit\">Next</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class Story extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayerStory: \"\",\r\n\t\t\tsubmitted: \"\",\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\tthis.handleStoryInputTextChange = this.handleStoryInputTextChange.bind(this);\r\n\t\tthis.handleStorySubmit = this.handleStorySubmit.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"calling listenToRoom on Story startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.props.playerPortraitIndex);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\tlet myIndex = -1;\r\n\t\tfor (let i = 0; i < players.length; ++i) {\r\n\t\t\tif( players[i].name === this.props.playerName ) {\r\n\t\t\t\tmyIndex = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( myIndex < 0 ) {\r\n\t\t\tconsole.error(\"player \"+this.props.playerName+\" not found!\");\r\n\t\t\twindow.alert(\"Server error: no longer in room, please restart the game (by having everyone browse back to the beginning and refresh) and try again.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({ players: players, playerData: players[myIndex] });\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleStoryInputTextChange(event) {\r\n\t\tconsole.log(\"handleStoryInputTextChange\");\r\n\t\tconsole.log(event);\r\n\t\tthis.setState({playerStory: event.target.value});\r\n\t}\r\n\t\r\n\thandleStorySubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tvar storyText = this.state.playerStory;\r\n\t\tconsole.log(\"storyText:\"+storyText);\r\n\t\t\r\n\t\t// update the player's story in firebase\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleStorySubmit calling updatePlayerInRoom player:\"+this.props.playerName+\" this.props.roomCodeToJoin:\"+this.props.roomCodeToJoin);\r\n\t\t\tvar updateStoryPlayerData = this.state.playerData;\r\n\t\t\tupdateStoryPlayerData.story = storyText;\r\n\t\t\tupdatePlayerInRoom(this.props.roomCodeToJoin, updateStoryPlayerData, () => {\r\n\t\t\t\tconsole.log(\"Story player updated callback\");\r\n\t\t\t\t// story changed, update app state\r\n\t\t\t\tthis.props.onStateChange(\"story\", storyText);\r\n\t\t\t\tconsole.log(this.props);\r\n\t\t\t\tthis.setState({ submitted: \"Submitted!\"});\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleNext(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.history.replace(\"/vote\");  // redirect to voting scene\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Player</h2>\r\n\t\t\t\t<div className=\"storyBox\">\r\n\t\t\t\t\t<div className=\"storyNameBox\">{this.props.playerName}</div><br />\r\n\t\t\t\t\t<img className=\"storyThumb\" src={portraits[this.props.playerPortraitIndex].idle} alt={portraits[this.props.playerPortraitIndex].idle} />\r\n\t\t\t\t\t<p>Self Trait: {this.props.selfTrait}</p>\r\n\t\t\t\t\t<p>Other Trait: {this.state.playerData != undefined? this.state.playerData.othertrait : undefined}</p>\r\n\t\t\t\t\t<p>Obstacle: {this.state.playerData != undefined? this.state.playerData.obstacle : undefined}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{/* the player writes a story */}\r\n\t\t\t\t<h2>Enter Story</h2>\r\n\t\t\t\t<p>You have a character with traits and an obstacle to face. Enter a story telling us what your character does.</p>\r\n\t\t\t\t<div id=\"submitStory\">\r\n\t\t\t\t\t<form onSubmit={this.handleStorySubmit}>\r\n\t\t\t\t\t\t<textarea type=\"text\" onChange={this.handleStoryInputTextChange} id=\"storyInput\" name=\"storyInput\" placeholder=\"I use my trait...\" /><br />\r\n\t\t\t\t\t\t<button id=\"storySubmitButton\" type=\"submit\">Submit</button><br />\r\n\t\t\t\t\t\t{this.state.submitted}<br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Next Step</h2>\r\n\t\t\t\t<div id=\"next\">\r\n\t\t\t\t\t<form onSubmit={this.handleNext}>\r\n\t\t\t\t\t\t<b>Do not</b> press this until everyone has finished writing and submitted their story.<br />\r\n\t\t\t\t\t\t<button id=\"nextButton\" type=\"submit\">Next</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class Vote extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\tsubmitted: \"\",\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\tthis.handleVoteSubmit = this.handleVoteSubmit.bind(this);\r\n\t\tthis.handleNext = this.handleNext.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"calling listenToRoom on Vote startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.props.playerPortraitIndex);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\t\r\n\t\tthis.setState({ players });\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleVoteSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\t// find the player that was voted\r\n\t\tvar votePlayerName = event.target.firstChild.name;\r\n\t\tconsole.log(\"votePlayerName:\"+votePlayerName);\r\n\t\t\r\n\t\t// update the vote count in firebase\r\n\t\ttry {\r\n\t\t\tconsole.log(\"handleVoteSubmit calling updatePlayerInRoom player:\"+this.props.playerName+\" this.props.roomCodeToJoin:\"+this.props.roomCodeToJoin);\r\n\t\t\t// get target player (the player you are voting for)\r\n\t\t\tlet votePlayerIndex = -1;\r\n\t\t\tfor (let i = 0; i < this.state.players.length; ++i) {\r\n\t\t\t\tif( this.state.players[i].name === votePlayerName ) {\r\n\t\t\t\t\tvotePlayerIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( votePlayerIndex < 0 ) {\r\n\t\t\t\tconsole.error(\"player \"+votePlayerName+\" not found!\");\r\n\t\t\t\twindow.alert(\"Server error: could not find player in room, please restart the game (by having everyone browse back to the beginning and refresh) and try again.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar targetPlayerData = this.state.players[votePlayerIndex];\r\n\t\t\tconsole.log(targetPlayerData);\r\n\t\t\ttargetPlayerData.votes++;\r\n\t\t\tconsole.log(targetPlayerData);\r\n\t\t\tupdatePlayerInRoom(this.props.roomCodeToJoin, targetPlayerData, () => {\r\n\t\t\t\tconsole.log(\"Vote player updated callback\");\r\n\t\t\t\tthis.setState({ submitted: \"Vote submitted!\"});\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ error: error.message });\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleNext(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.history.replace(\"/end\");\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* show all the portraits and let the player click to select their avatar */}\r\n\t\t\t\t<h2>Vote</h2>\r\n\t\t\t\t<p>Vote for your favorites or for each one that entertained you.</p><br />\r\n\t\t\t\t<div className=\"voteSelectionContainer\">\r\n\t\t\t\t\t{this.state.players.map((player, index) => (\r\n\t\t\t\t\t\t<div id={\"story\"+index} key={\"story-\"+index+\"-\"+player.name} className=\"storyDiv\">\r\n\t\t\t\t\t\t\t<p>Name: {player.name}</p>\r\n\t\t\t\t\t\t\t<img src={portraits[player.portrait].idle} alt={portraits[player.portrait].idle+index} /><br />\r\n\t\t\t\t\t\t\t<p>Self Trait: {player.selftrait}</p>\r\n\t\t\t\t\t\t\t<p>Other Trait: {player.othertrait}</p>\r\n\t\t\t\t\t\t\t<p>Obstacle: {player.obstacle}</p>\r\n\t\t\t\t\t\t\t<p>Story: {player.story}</p>\r\n\t\t\t\t\t\t\t<form onSubmit={this.handleVoteSubmit}>\r\n\t\t\t\t\t\t\t\t<button id={index+\"VoteButton\"} name={player.name} type=\"submit\">Vote</button><br />\r\n\t\t\t\t\t\t\t\t{this.state.submitted}<br />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Next Step</h2>\r\n\t\t\t\t<div id=\"next\">\r\n\t\t\t\t\t<form onSubmit={this.handleNext}>\r\n\t\t\t\t\t\t<b>Do not</b> press this until everyone has finished submitting their votes.<br />\r\n\t\t\t\t\t\t<button id=\"nextButton\" type=\"submit\">Next</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { listenToRoom, updatePlayerInRoom } from '../helpers/rooms';\r\nimport FairyMascotSplashImage from '../assets/Fairy_Mascot.jpg';\r\nimport GymGuyIdleImage from '../assets/GymGuy_idle.png';\r\nimport GymGuyDefeatImage from '../assets/GymGuy_defeat.png';\r\nimport GymGuyVictoryImage from '../assets/GymGuy_victory.png';\r\nimport BlueHairIdleImage from '../assets/blue_idle.png';\r\nimport BlueHairDefeatImage from '../assets/blue_defeat.png';\r\nimport BlueHairVictoryImage from '../assets/blue_victory.png';\r\nimport FoxCopIdleImage from '../assets/fox_Idle.png';\r\nimport FoxCopDefeatImage from '../assets/fox_Defeat.png';\r\nimport FoxCopVictoryImage from '../assets/fox_Victory.png';\r\nimport DragonIdleImage from '../assets/Dragon-Idle.gif';\r\nimport DragonDefeatImage from '../assets/Dragon-Defeat.gif';\r\nimport DragonVictoryImage from '../assets/Dragon-Victory.gif';\r\nimport NinjaIdleImage from '../assets/Ninja-idle.png';\r\nimport NinjaDefeatImage from '../assets/Ninja-defeat.png';\r\nimport NinjaVictoryImage from '../assets/Ninja-victory.png';\r\nimport PigletIdleImage from '../assets/Piglet_Idle.png';\r\nimport PigletDefeatImage from '../assets/Piglet_Defeat.png';\r\nimport PigletVictoryImage from '../assets/Piglet_Victory.png';\r\nimport VampIdleImage from '../assets/vamp_Idle.png';\r\nimport VampDefeatImage from '../assets/vamp_Defeat.png';\r\nimport VampVictoryImage from '../assets/vamp_Victory.png';\r\nimport RobotIdleImage from '../assets/robot_Idle.png';\r\nimport RobotDefeatImage from '../assets/robot_Defeat.png';\r\nimport RobotVictoryImage from '../assets/robot_Victory.png';\r\n\r\n\r\n// this also determines the portraitIndex stored in firebase\r\nconst portraits = [\r\n\t{\r\n\t\tidle: BlueHairIdleImage,\r\n\t\tsuccess: BlueHairVictoryImage,\r\n\t\tfailure: BlueHairDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: GymGuyIdleImage,\r\n\t\tsuccess: GymGuyVictoryImage,\r\n\t\tfailure: GymGuyDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: FoxCopIdleImage,\r\n\t\tsuccess: FoxCopVictoryImage,\r\n\t\tfailure: FoxCopDefeatImage\r\n\t},\r\n\t{\r\n\t\tidle: DragonIdleImage,\r\n\t\tsuccess: DragonVictoryImage,\r\n\t\tfailure: DragonDefeatImage\r\n\t},\r\n\t{\r\n    idle: NinjaIdleImage,\r\n    success: NinjaVictoryImage,\r\n    failure: NinjaDefeatImage\r\n  },\r\n\t{\r\n    idle: PigletIdleImage,\r\n    success: PigletVictoryImage,\r\n    failure: PigletDefeatImage\r\n  },\r\n\t{\r\n    idle: VampIdleImage,\r\n    success: VampVictoryImage,\r\n    failure: VampDefeatImage\r\n  },\r\n\t{\r\n    idle: RobotIdleImage,\r\n    success: RobotVictoryImage,\r\n    failure: RobotDefeatImage\r\n  }\r\n];\r\n\r\nfunction portraitReset(portraitImage, index) {\r\n\tportraitImage.src = portraits[index].idle;\r\n}\r\n\r\nexport default class End extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tplayers: [],\r\n\t\t\twinners: [],\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.roomUnsubscribeFunc = null;\r\n\t\tthis.handleRoomPlayersUpdated = this.handleRoomPlayersUpdated.bind(this);\r\n\t\tthis.setRoomUnsubscribeFunc = this.setRoomUnsubscribeFunc.bind(this);\r\n\t\tthis.handleNewGame = this.handleNewGame.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"calling listenToRoom on End startup\");\r\n\t\tconsole.log(this.props);\r\n\t\tconsole.log(this.props.roomCodeToJoin);\r\n\t\tconsole.log(this.props.playerName);\r\n\t\tconsole.log(this.props.playerPortraitIndex);\r\n\t\tlistenToRoom(this.props.roomCodeToJoin, this.handleRoomPlayersUpdated, this.setRoomUnsubscribeFunc);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tconsole.log(this.roomUnsubscribeFunc);\r\n\t\tthis.roomUnsubscribeFunc();  // stop listening for room changes\r\n\t}\r\n\t\r\n\t//handleChange(event) {\r\n\t//\tthis.setState({\r\n\t//\t\t[event.target.name]: event.target.value\r\n\t//\t});\r\n\t//}\r\n\t\r\n\thandleRoomPlayersUpdated(players) {\r\n\t\tconsole.log(\"handleRoomPlayersUpdated called\");\r\n\t\tconsole.log(players);\r\n\t\tvar highestScore = 0;\r\n\t\tvar winners = [];\r\n\t\tfor (let h = players.length-1; h >= 0; --h) {\r\n\t\t\tlet player = players[h];\r\n\t\t\tlet playerVotes = player.votes;\r\n\t\t\tif( playerVotes > highestScore ) {\r\n\t\t\t\thighestScore = playerVotes;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = players.length-1; i >= 0; --i) {\r\n\t\t\tif( players[i].votes == highestScore ) {\r\n\t\t\t\twinners.push(players[i].name);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(\"highestScore:\"+highestScore);\r\n\t\tconsole.log(\"winners:\");\r\n\t\tconsole.log(winners);\r\n\t\tthis.setState({ players: players, winners: winners });\r\n\t}\r\n\t\r\n\tsetRoomUnsubscribeFunc(roomUnsubscribeFunc) {\r\n\t\tthis.roomUnsubscribeFunc = roomUnsubscribeFunc;\r\n\t}\r\n\t\r\n\thandleNewGame(event) {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\tthis.props.history.replace(\"/\");\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* show all the portraits and vote count and play victory for winners and defeat for others */}\r\n\t\t\t\t<h2>The End</h2>\r\n\t\t\t\t<p>Congratulations to our winners!</p><br />\r\n\t\t\t\t<div className=\"endContainer\">\r\n\t\t\t\t\t{this.state.players.map((player, index) => (\r\n\t\t\t\t\t\t<div id={\"end\"+index} key={\"end-\"+index+\"-\"+player.name} className=\"endDiv\">\r\n\t\t\t\t\t\t\t<p>Name: {player.name}</p>\r\n\t\t\t\t\t\t\t<img src={this.state.winners.includes(player.name)? portraits[player.portrait].success : portraits[player.portrait].failure} alt={(this.state.winners.includes(player.name)? portraits[player.portrait].success : portraits[player.portrait].failure)+\"\"+index} /><br />\r\n\t\t\t\t\t\t\t<p>Votes: {player.votes}</p>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2>Credits</h2>\r\n\t\t\t\t<div id=\"credits\">\r\n\t\t\t\t\t<p>J Peter Jones - Art, Animation</p>\r\n\t\t\t\t\t<p>vazor - Design, Code</p><br />\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h2>Next Step</h2>\r\n\t\t\t\t<div id=\"newGame\">\r\n\t\t\t\t\t<form onSubmit={this.handleNewGame}>\r\n\t\t\t\t\t\t<button id=\"newGameButton\" type=\"submit\">New Game</button><br />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\tBy using this website you agree that we are not liable for your use of our game, any content you submit is fair use, and you will not disrupt or harass other players.<br />\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n\tRoute,\r\n\tHashRouter as Router,\r\n\tSwitch,\r\n\tRedirect,\r\n} from \"react-router-dom\";\r\nimport Home from './pages/Home';\r\nimport Info from './pages/Info';\r\nimport Lobby from './pages/Lobby';\r\nimport SelfTrait from './pages/SelfTrait';\r\nimport OtherTrait from './pages/OtherTrait';\r\nimport Obstacle from './pages/Obstacle';\r\nimport Story from './pages/Story';\r\nimport Vote from './pages/Vote';\r\nimport End from './pages/End';\r\nimport Chat from './pages/Chat';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport './styles.css';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tloading: true,\r\n\t\t\tcreatorPlayerName: '',\r\n\t\t\troomCodeToJoin: '',\r\n\t\t\tplayerName: '',\r\n\t\t\tplayerPortraitIndex: 0,\r\n\t\t\tselfTrait: '',\r\n\t\t\tstory: '',\r\n\t\t\tvotes: 0\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tloading: false\r\n\t\t});\r\n\t}\r\n\t\r\n\t// needs to be a lambda because this can be called by other classes and \r\n\t// a normal function would mess up the \"this\" reference\r\n\thandleStateChange = (name, value) => {\r\n\t\tconsole.log(\"handleStateChange called- \"+name+\":\"+value);\r\n\t\tvar newState = {};\r\n\t\tnewState[name] = value;\r\n\t\tthis.setState(newState);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn this.state.loading === true ? (\r\n\t\t\t<div className=\"spinner-border text-success\" role=\"status\">\r\n\t\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Home {...props} \r\n\t\t\t\t\t\t\t\tcreatorPlayerName={this.state.creatorPlayerName} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} \r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/info\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Info {...props} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/lobby\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Lobby {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tcreatorPlayerName={this.state.creatorPlayerName} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/selftrait\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<SelfTrait {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tplayerPortraitIndex={this.state.playerPortraitIndex} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/othertrait\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<OtherTrait {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tplayerPortraitIndex={this.state.playerPortraitIndex} \r\n\t\t\t\t\t\t\t\tselfTrait={this.state.selfTrait} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/obstacle\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Obstacle {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tplayerPortraitIndex={this.state.playerPortraitIndex} \r\n\t\t\t\t\t\t\t\tselfTrait={this.state.selfTrait} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/story\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Story {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tplayerPortraitIndex={this.state.playerPortraitIndex} \r\n\t\t\t\t\t\t\t\tselfTrait={this.state.selfTrait} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/vote\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<Vote {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tplayerPortraitIndex={this.state.playerPortraitIndex} \r\n\t\t\t\t\t\t\t\tselfTrait={this.state.selfTrait} \r\n\t\t\t\t\t\t\t\tstory={this.state.story} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact\r\n\t\t\t\t\t\tpath=\"/end\"\r\n\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t<End {...props} \r\n\t\t\t\t\t\t\t\troomCodeToJoin={this.state.roomCodeToJoin} \r\n\t\t\t\t\t\t\t\tplayerName={this.state.playerName} \r\n\t\t\t\t\t\t\t\tplayerPortraitIndex={this.state.playerPortraitIndex} \r\n\t\t\t\t\t\t\t\tselfTrait={this.state.selfTrait} \r\n\t\t\t\t\t\t\t\tstory={this.state.story} \r\n\t\t\t\t\t\t\t\tonStateChange={this.handleStateChange} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign Up to\r\n          <Link to=\"/\">Chatty</Link>\r\n          </h1>\r\n          <p>Fill in the form below to create an account.</p>\r\n          <div>\r\n            <input placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div>\r\n            <input placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div>\r\n            {this.state.error ? <p>{this.state.error}</p> : null}\r\n            <button type=\"submit\">Sign up</button>\r\n          </div>\r\n          <hr></hr>\r\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign Up to\r\n          <Link to=\"/\">Chatty</Link>\r\n          </h1>\r\n          <p>Fill in the form below to create an account.</p>\r\n          <div>\r\n            <input placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div>\r\n            <input placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div>\r\n            {this.state.error ? <p>{this.state.error}</p> : null}\r\n            <button type=\"submit\">Sign up</button>\r\n          </div>\r\n          <hr></hr>\r\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <h1>\r\n            Sign Up to\r\n          <Link to=\"/\">Chatty</Link>\r\n          </h1>\r\n          <p>Fill in the form below to create an account.</p>\r\n          <div>\r\n            <input placeholder=\"Email\" name=\"email\" type=\"email\" onChange={this.handleChange} value={this.state.email}></input>\r\n          </div>\r\n          <div>\r\n            <input placeholder=\"Password\" name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\"></input>\r\n          </div>\r\n          <div>\r\n            {this.state.error ? <p>{this.state.error}</p> : null}\r\n            <button type=\"submit\">Sign up</button>\r\n          </div>\r\n          <hr></hr>\r\n          <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}